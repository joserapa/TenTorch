Results of doctest builder run on 2023-05-10 21:18:36
=====================================================

Document: components
--------------------
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    nodeA['right'] ^ nodeB['left']
Expected nothing
Got:
    Edge( node_0[right] <-> node_1[left] )
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    nodeB['right'] ^ nodeC['left']
Expected nothing
Got:
    Edge( node_1[right] <-> node_2[left] )
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    nodeA['right'] ^ nodeB['left']
Expected nothing
Got:
    Edge( node_0[right] <-> node_1[left] )
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    nodeB['right'] ^ nodeC['left']
Expected nothing
Got:
    Edge( node_1[right] <-> node_2[left] )
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    nodeA['right'] ^ nodeB['left']
Expected nothing
Got:
    Edge( node_0[right] <-> node_1[left] )
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    nodeB['right'] ^ nodeC['left']
Expected nothing
Got:
    Edge( node_1[right] <-> node_2[left] )
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    nodeA['right'] ^ nodeB['left']
Expected nothing
Got:
    Edge( node_0[right] <-> node_1[left] )
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    node.tensor
Expected:
    tensor([[-0.2799, -0.4383, -0.8387],
            [ 1.6225, -0.3370, -1.2316]])
Got:
    tensor([[ 0.0274, -0.8102,  0.2136],
            [-0.5579,  1.7192,  0.6718]])
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    node.sum()
Expected:
    tensor(-1.5029)
Got:
    tensor(1.2639)
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    node.sum('left')
Expected:
    tensor([ 1.3427, -0.7752, -2.0704])
Got:
    tensor([-0.5305,  0.9090,  0.8854])
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    node.tensor
Expected:
    tensor([[ 1.4005, -0.0521, -1.2091],
            [ 1.9844,  0.3513, -0.5920]])
Got:
    tensor([[-0.2073,  0.3211, -0.2689],
            [-0.4132,  2.7749, -0.3902]])
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    node.mean()
Expected:
    tensor(0.3139)
Got:
    tensor(0.3027)
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    node.mean('left')
Expected:
    tensor([ 1.6925,  0.1496, -0.9006])
Got:
    tensor([-0.3103,  1.5480, -0.3295])
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    node.tensor
Expected:
    tensor([[ 0.2111, -0.9551, -0.7812],
            [ 0.2254,  0.3381, -0.2461]])
Got:
    tensor([[-0.7888,  0.7196, -0.8503],
            [ 0.8671,  0.9058,  0.4786]])
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    node.std()
Expected:
    tensor(0.5567)
Got:
    tensor(0.8208)
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    node.std('left')
Expected:
    tensor([0.0101, 0.9145, 0.3784])
Got:
    tensor([1.1709, 0.1317, 0.9397])
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    node.tensor
Expected:
    tensor([[ 1.5570,  1.8441, -0.0743],
            [ 0.4572,  0.7592,  0.6356]])
Got:
    tensor([[ 0.1060, -0.2238, -1.2923],
            [ 0.7418, -1.1945,  1.2523]])
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    node.norm()
Expected:
    tensor(2.6495)
Got:
    tensor(2.2971)
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    node.norm(axis='left')
Expected:
    tensor([1.6227, 1.9942, 0.6399])
Got:
    tensor([0.7494, 1.2153, 1.7995])
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    nodeA[1] ^ nodeB[0]
Expected nothing
Got:
    Edge( node_0[axis_1] <-> node_1[axis_0] )
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    nodeA = nodeA.parameterize()
Exception raised:
    Traceback (most recent call last):
      File "/home/jose/anaconda3/envs/pytorch/lib/python3.8/doctest.py", line 1336, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[0]>", line 1, in <module>
        nodeA = nodeA.parameterize()
    NameError: name 'nodeA' is not defined
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    paramnode.tensor
Expected:
    Parameter containing:
    tensor([[-0.3340,  0.6811, -0.2866],
            [ 1.3371,  1.4761,  0.6551]], requires_grad=True)
Got:
    Parameter containing:
    tensor([[-0.3992, -0.0735,  1.0304],
            [-0.7474, -0.1649, -0.8673]], requires_grad=True)
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    paramnodeA[1] ^ paramnodeB[0]
Expected nothing
Got:
    Edge( paramnode_0[axis_1] <-> paramnode_1[axis_0] )
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    paramnodeA = paramnodeA.parameterize()
Exception raised:
    Traceback (most recent call last):
      File "/home/jose/anaconda3/envs/pytorch/lib/python3.8/doctest.py", line 1336, in __run
        exec(compile(example.source, filename, "single",
      File "<doctest default[0]>", line 1, in <module>
        paramnodeA = paramnodeA.parameterize()
    NameError: name 'paramnodeA' is not defined
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    for i in range(10):
        nodes[i]['input'] ^ data[i]['feature']
Expected nothing
Got:
    Edge( node_0[input] <-> node_10[feature] )
    Edge( node_1[input] <-> node_11[feature] )
    Edge( node_2[input] <-> node_12[feature] )
    Edge( node_3[input] <-> node_13[feature] )
    Edge( node_4[input] <-> node_14[feature] )
    Edge( node_5[input] <-> node_15[feature] )
    Edge( node_6[input] <-> node_16[feature] )
    Edge( node_7[input] <-> node_17[feature] )
    Edge( node_8[input] <-> node_18[feature] )
    Edge( node_9[input] <-> node_19[feature] )
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    stack_nodes['input'] ^ stack_data['feature']
Expected nothing
Got:
    StackEdge( stack_0[input] <-> stack_1[feature] )
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    for i in range(10):
        nodes[i]['input'] ^ data[i]['feature']
Expected nothing
Got:
    Edge( paramnode_0[input] <-> node_0[feature] )
    Edge( paramnode_1[input] <-> node_1[feature] )
    Edge( paramnode_2[input] <-> node_2[feature] )
    Edge( paramnode_3[input] <-> node_3[feature] )
    Edge( paramnode_4[input] <-> node_4[feature] )
    Edge( paramnode_5[input] <-> node_5[feature] )
    Edge( paramnode_6[input] <-> node_6[feature] )
    Edge( paramnode_7[input] <-> node_7[feature] )
    Edge( paramnode_8[input] <-> node_8[feature] )
    Edge( paramnode_9[input] <-> node_9[feature] )
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    stack_nodes['input'] ^ stack_data['feature']
Expected nothing
Got:
    StackEdge( my_stack[input] <-> stack[feature] )
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    for i in range(10):
        nodes[i]['input'] ^ data[i]['feature']
Expected nothing
Got:
    Edge( node_0[input] <-> node_10[feature] )
    Edge( node_1[input] <-> node_11[feature] )
    Edge( node_2[input] <-> node_12[feature] )
    Edge( node_3[input] <-> node_13[feature] )
    Edge( node_4[input] <-> node_14[feature] )
    Edge( node_5[input] <-> node_15[feature] )
    Edge( node_6[input] <-> node_16[feature] )
    Edge( node_7[input] <-> node_17[feature] )
    Edge( node_8[input] <-> node_18[feature] )
    Edge( node_9[input] <-> node_19[feature] )
**********************************************************************
File "../tensorkrowch/components.py", line ?, in default
Failed example:
    nodeA['right'] ^ nodeB['left']
Expected nothing
Got:
    Edge( node_0[right] <-> node_1[left] )
**********************************************************************
1 items had failures:
  30 of 210 in default
210 tests in 1 items.
180 passed and 30 failed.
***Test Failed*** 30 failures.

Document: models
----------------
1 items passed all tests:
  40 tests in default
40 tests in 1 items.
40 passed and 0 failed.
Test passed.

Doctest summary
===============
  250 tests
   30 failures in tests
    0 failures in setup code
    0 failures in cleanup code
